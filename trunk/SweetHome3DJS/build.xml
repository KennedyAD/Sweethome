<?xml version="1.0"?>
<!-- build.xml

     Sweet Home 3D JS, Copyright (c) 2016-2022 Emmanuel PUYBARET / eTeks <info@eteks.com>. 
     
     Ant build file. Available targets :
     - viewerLibraries         : Generates JavaScript libraries required for the viewer project
     - applicationLibraries    : Generates JavaScript libraries required for the application project
     - viewerDistribution      : Builds minified Javacript viewer files in dist directory
     - applicationDistribution : Builds minified Javacript application files in dist directory
     - viewerBuild             : Builds SweetHome3DJSViewer-version.zip file in install directory
     - applicationBuild        : Builds SweetHome3DJS-version.war file in install directory
     - jsdoc                   : Builds SweetHome3DJS-version-jsdoc.zip file in install directory
     - sourceArchive           : Builds SweetHome3DJS-version-src.zip file in install directory
-->
<project basedir="." default="viewerBuild" name="SweetHome3DJS">
  <!-- The current version of Sweet Home 3D JS -->
  <property name="version" value="7.0.2"/>

  <!-- The version of JSweet transpiler (use version 3.1.0 to compile with Java 11) -->
  <property name="jsweet-version" value="3.2.0-SNAPSHOT"/>

  <!-- Java to JavaScript and TypeScript transpilation with JSweet -->
  <target name="transpiledLibraries"
          description="Transpiles Sweet Home 3D classes to tools/JSweet/build">
    <!-- Compile classes which adapts JSweet transpiler to Sweet Home 3D JS needs  -->
    <mkdir dir="tools/JSweet/build/SweetHome3DJSweetExtension"/>
    <javac srcdir="tools/JSweet/src"
           destdir="tools/JSweet/build/SweetHome3DJSweetExtension"
           classpath="tools/JSweet/lib/jsweet-transpiler-${jsweet-version}-jar-with-dependencies.jar"
           source="1.8" target="1.8" encoding="ISO-8859-1"
           includes="com/eteks/sweethome3d/jsweet/*" />

    <!-- Transpile Sweet Home 3D classes -->
    <mkdir dir="tools/JSweet/build/ts" />
    <mkdir dir="tools/JSweet/build/js" />
    <java classname="org.jsweet.JSweetCommandLineLauncher" fork="true" failonerror="true">
      <arg value="-v" />
      <arg value="-b" />
      <arg value="--workingDir" />
      <arg value="tools/JSweet/build/jsweet.tmp" />
      <arg value="--factoryClassName" />
      <arg value="com.eteks.sweethome3d.jsweet.SweetHome3DJSweetFactory" />
      <arg value="--header"/>
      <arg value="tools/JSweet/header.txt" />
      <!-- ts output dir -->
      <arg value="--tsout" />
      <arg value="tools/JSweet/build/ts" />
      <!-- js output dir -->
      <arg value="-o" />
      <arg value="tools/JSweet/build/js" />
      <arg value="--declaration" />
      <arg value="--encoding" />
      <arg value="ISO-8859-1" />
      <arg value="--candiesJsOut"/>
      <arg value="tools/JSweet/build/js" />
      <arg value="-i" />
      <arg value="../SweetHome3D/src${path.separator}tools/JSweet/src" />
      <arg value="--includes" />
      <arg value="def${path.separator}com/eteks/sweethome3d/model${path.separator}com/eteks/sweethome3d/tools${path.separator}com/eteks/sweethome3d/viewcontroller${path.separator}com/eteks/sweethome3d/io" />
      <!-- Transpilation target may contain almost all com.eteks.sweethome3d.viewcontroller classes or only the subset needed to run
           Sweet Home 3D JS Viewer (in which case swingundo.js extracted from tools/JSweet/build/js/j4ts-swingundo-1.8.132-20170726/bundle.js isn't required) -->

      <sysproperty key="transpilationTarget" value="${buildType}"/>
      <classpath>
        <pathelement location="tools/JSweet/lib/jsweet-transpiler-${jsweet-version}-jar-with-dependencies.jar"/>
        <pathelement location="tools/JSweet/lib/bigjs-3.1.0-20170726.jar"/>
        <pathelement location="tools/JSweet/lib/j4ts-awtgeom-1.8.132-20200519.jar"/>
        <pathelement location="tools/JSweet/lib/j4ts-batik-svgpathparser-1.10.0-20170726.jar"/>
        <pathelement location="tools/JSweet/lib/j4ts-swingundo-1.8.132-20170726.jar"/>
        <pathelement location="tools/JSweet/lib/jsweet-core-6.3.1.jar"/>
        <pathelement location="tools/JSweet/build/SweetHome3DJSweetExtension"/>
        <pathelement location="../SweetHome3D/libtest/jnlp.jar"/>
        <pathelement location="../SweetHome3D/libtest/AppleJavaExtensions.jar"/>
      </classpath>
    </java>
  </target>

  <target name="viewerLibraries"
          description="Builds lib/generated/SweetHome3DViewer.js and retrieves other generated JavaScript libraries">
    <antcall target="transpiledLibraries">
      <param name="buildType" value="SweetHome3DJSViewer"/>
    </antcall>
    <mkdir dir="lib/generated" />
    <move file="tools/JSweet/build/js/bundle.js" tofile="lib/generated/SweetHome3DViewer.js"/>
    <move file="tools/JSweet/build/js/j4ts-awtgeom-1.8.132-20200519/bundle.js" tofile="lib/generated/geom.js"/>
    <move file="tools/JSweet/build/js/j4ts-batik-svgpathparser-1.10.0-20170726/bundle.js" tofile="lib/generated/batik-svgpathparser.js"/>
    <!-- Clean build directory -->
    <delete dir="tools/JSweet/build" />
  </target>

  <target name="applicationLibraries" depends="applicationResources"
          description="Builds lib/generated/SweetHome3D.js and retrieves other generated JavaScript libraries and resources">
    <antcall target="transpiledLibraries">
      <param name="buildType" value="SweetHome3DJSApplication"/>
    </antcall>
    <mkdir dir="lib/generated" />
    <move file="tools/JSweet/build/js/bundle.js" tofile="lib/generated/SweetHome3D.js"/>
    <move file="tools/JSweet/build/js/j4ts-awtgeom-1.8.132-20200519/bundle.js" tofile="lib/generated/geom.js"/>
    <move file="tools/JSweet/build/js/j4ts-batik-svgpathparser-1.10.0-20170726/bundle.js" tofile="lib/generated/batik-svgpathparser.js"/>
    <move file="tools/JSweet/build/js/j4ts-swingundo-1.8.132-20170726/bundle.js" tofile="lib/generated/swingundo.js"/>
    <!-- Clean build directory -->
    <delete dir="tools/JSweet/build" />
  </target>

  <target name="jsweetCandy" depends="transpiledLibraries"
          description="Builds tools/JSweet/lib/generated/SweetHome3DJS.jar JSweet Candy for sub projects">
    <mkdir dir="tools/JSweet/build/candy/classes" />
    <javac srcdir="tools/JSweet/src" destdir="tools/JSweet/build/candy/classes" classpath="tools/JSweet/lib/jsweet-core-6.3.1.jar"
           source="1.8" target="1.8" encoding="ISO-8859-1" 
    	   includes="def/**" />

    <mkdir dir="tools/JSweet/build/candy/resources/META-INF/resources/typings" />
    <move file="tools/JSweet/build/js/bundle.d.ts" tofile="tools/JSweet/build/candy/resources/META-INF/resources/typings/viewhome.d.ts"  />
    <move file="tools/JSweet/build/ts/bundle.d.ts" tofile="tools/JSweet/build/candy/resources/META-INF/resources/typings/defs.d.ts" />
    <copy file="tools/JSweet/candy-metadata.json" tofile="tools/JSweet/build/candy/resources/META-INF/candy-metadata.json" />

    <mkdir dir="tools/JSweet/lib/generated" />
    <jar destfile="tools/JSweet/lib/generated/SweetHome3DJS.jar">
      <fileset dir="tools/JSweet/build/candy/classes" />
      <fileset dir="tools/JSweet/build/candy/resources" />
    </jar>

    <!-- Clean build directory -->
    <delete dir="tools/JSweet/build" />
  </target>

  <target name="applicationResources"
          description="Builds resources for application found in lib/resources/patterns">
    <copy todir="lib/resources/patterns">
      <fileset dir="../SweetHome3D/src/com/eteks/sweethome3d/io/resources/patterns" />
    </copy>
    <copy todir="lib/resources/cursors">
      <fileset dir="../SweetHome3D/src/com/eteks/sweethome3d/swing/resources/cursors" />
    </copy>
  	<copy todir="lib/resources/actions">
      <fileset dir="../SweetHome3D/src/com/eteks/sweethome3d/swing/resources/actions">
        <include name="*.svg" />
      </fileset>
    </copy>
    <copy todir="lib/resources">
      <fileset dir="../SweetHome3D/src/com/eteks/sweethome3d/swing/resources">
        <include name="*.png" />
      </fileset>
    </copy>
    <copy todir="lib/resources">
      <fileset dir="../SweetHome3D/src/com/eteks/sweethome3d/viewcontroller/resources">
        <include name="*.png" />
      </fileset>
    </copy>
    <mkdir dir="tools/json/build"/>
    <javac srcdir="tools/json/src" destdir="tools/json/build/"
           classpath="tools/json/lib/json-20190722.jar"
           source="1.8" target="1.8" encoding="ISO-8859-1"
           includes="com/eteks/sweethome3d/json/*" />
    <java classname="com.eteks.sweethome3d.json.PropertiesToJson" fork="true" failonerror="true">
      <classpath>
        <pathelement location="tools/json/build" />
        <pathelement location="tools/json/lib/json-20190722.jar"/>
      </classpath>
    </java>
    <!-- Clean build directory -->
    <delete dir="tools/json/build" />
  </target>

  <target name="viewerConcat" depends="viewerLibraries"
          description="Concat viewer Javacript files in dist/build directory">
    <delete dir="dist" />
    <mkdir dir="dist/build" />
    <concat destfile="dist/build/viewmodel.min.js" encoding="UTF-8">
      <filelist dir="src">
        <file name="scene3d.js" />
        <file name="HTMLCanvas3D.js" />
        <file name="URLContent.js" />
        <file name="ModelLoader.js" />
        <file name="OBJLoader.js" />
        <file name="ModelManager.js" />
        <file name="ModelPreviewComponent.js" />
        <file name="viewModel.js" />
      </filelist>
    </concat>
    <concat destfile="dist/build/viewhome.min.js" encoding="UTF-8">
      <fileset dir="lib/generated" includes="SweetHome3DViewer.js" />
      <filelist dir="src">
        <file name="DAELoader.js" />
        <file name="Max3DSLoader.js" />
        <file name="ShapeTools.js" />
        <file name="HomeRecorder.js" />
        <file name="HomeComponent3D.js" />
        <file name="Object3DBranch.js" />
        <file name="HomePieceOfFurniture3D.js" />
        <file name="Wall3D.js" />
        <file name="Room3D.js" />
        <file name="Ground3D.js" />
        <file name="Polyline3D.js" />
        <file name="Label3D.js" />
        <file name="TextureManager.js" />
        <file name="LengthUnit.js" />
        <file name="UserPreferences.js" />
        <file name="viewHome.js" />
      </filelist>
    </concat>
  </target>

  <target name="applicationConcat" depends="applicationLibraries"
          description="Concat Javacript files in dist/build directory">
    <delete dir="dist" />
    <mkdir dir="dist/build" />
    <concat destfile="dist/build/sweethome3d.min.js" encoding="UTF-8">
      <fileset dir="lib/generated" includes="SweetHome3D.js" />
      <filelist dir="src">
        <file name="scene3d.js"/>
        <file name="HTMLCanvas3D.js"/>
        <file name="CoreTools.js"/>
        <file name="URLContent.js"/>
        <file name="ModelLoader.js"/>
        <file name="OBJLoader.js"/>
        <file name="DAELoader.js"/>
        <file name="Max3DSLoader.js"/>
        <file name="ModelManager.js"/>
        <file name="ModelPreviewComponent.js" />
        <file name="ShapeTools.js"/>
        <file name="HomeComponent3D.js"/>
        <file name="Object3DBranch.js"/>
        <file name="HomePieceOfFurniture3D.js"/>
        <file name="Room3D.js"/>
        <file name="Wall3D.js"/>
        <file name="Ground3D.js"/>
        <file name="Polyline3D.js"/>
        <file name="Label3D.js"/>
        <file name="TextureManager.js"/>
        <file name="LengthUnit.js"/>
        <file name="UserPreferences.js"/>
        <file name="HomeRecorder.js"/>
      	<file name="ResourceAction.js"/>
        <file name="PlanComponent.js"/>
        <file name="HomePane.js"/>
        <file name="DefaultFurnitureCatalog.js"/>
        <file name="DefaultTexturesCatalog.js"/>
        <file name="FurnitureCatalogListPanel.js"/>
      	<file name="FurnitureTablePanel.js"/>
        <file name="toolkit.js"/>
        <file name="ColorButton.js"/>
        <file name="TextureChoiceComponent.js"/>
        <file name="ModelMaterialsComponent.js"/>
        <file name="JSViewFactory.js"/>
        <file name="SweetHome3DJSApplication.js"/>
      </filelist>
    </concat>
  </target>

  <target name="commonLibrariesDistribution"
          description="Builds minified Javacript files common to viewer and application in dist directory">
    <!-- Download and build YUI Compressor -->
    <available file="tools/yuicompressor" type="dir" property="yuicompressor.present" />
    <antcall target="install-yuicompressor" />
    <!-- Find full name of YUI Compressor jar -->
    <path id="yuicompressor.jar">
      <first>
        <fileset dir="tools/yuicompressor/build/" includes="yuicompressor*.jar" />
      </first>
    </path>
    <property name="yuicompressor.jar" refid="yuicompressor.jar" />
    <!-- Minify Javascript files -->
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="src/core.js" />
      <arg value="-o" />
      <arg value="dist/build/core.min.js" />
    </java>
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="lib/generated/geom.js" />
      <arg value="-o" />
      <arg value="dist/build/geom.min.js" />
    </java>
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="lib/generated/batik-svgpathparser.js" />
      <arg value="-o" />
      <arg value="dist/build/batik-svgpathparser.min.js" />
    </java>
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="src/Triangulator.js" />
      <arg value="-o" />
      <arg value="dist/build/triangulator.min.js" />
    </java>

    <!-- Add core.js GNU GPL header to core.min.js -->
    <concat destfile="dist/core.min.js" encoding="UTF-8">
      <header file="src/core.js" />
      <filterchain>
        <headfilter lines="24" />
        <tokenfilter>
          <replacestring from="core.js" to="core.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
      <file name="dist/build/core.min.js" />
    </concat>
    <!-- Add core.js GNU GPL header to geom.min.js -->
    <concat destfile="dist/geom.min.js" encoding="UTF-8">
      <file file="src/core.js" />
      <filterchain>
        <headfilter lines="24" />
        <tokenfilter>
          <replacestring from="core.js" to="geom.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
    </concat>
    <concat destfile="dist/geom.min.js" encoding="UTF-8" append="true">
      <file name="lib/generated/geom.js" />
      <filterchain>
        <headfilter lines="1" skip="13" />
      </filterchain>
    </concat>
    <concat destfile="dist/geom.min.js" encoding="UTF-8" append="true">
      <file name="dist/build/geom.min.js" />
    </concat>
    <!-- Add THIRDPARTY-LICENSE-BATIK.TXT to dist/batik-svgpathparser.min.js -->
    <concat destfile="dist/batik-svgpathparser.min.js" encoding="UTF-8">
      <header filtering="no" trimleading="yes">/*
      </header>
      <file name="THIRDPARTY-LICENSE-BATIK.TXT" />
      <filterchain>
        <headfilter lines="3" skip="14" />
      </filterchain>
    </concat>
    <concat destfile="dist/batik-svgpathparser.min.js" encoding="UTF-8" append="true">
      <header filtering="no" trimleading="yes">*/
      </header>
      <file name="lib/generated/batik-svgpathparser.js" />
      <filterchain>
        <headfilter lines="1" skip="5" />
      </filterchain>
    </concat>
    <concat destfile="dist/batik-svgpathparser.min.js" encoding="UTF-8" append="true">
      <file name="dist/build/batik-svgpathparser.min.js" />
    </concat>

    <concat destfile="dist/triangulator.min.js" encoding="UTF-8">
      <header file="src/Triangulator.js" />
      <filterchain>
        <headfilter lines="41" />
        <tokenfilter>
          <replacestring from="Triangulator.js" to="triangulator.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
      <file name="dist/build/triangulator.min.js" />
    </concat>
    <copy file="lib/stroke.min.js" todir="dist" />
    <copy file="lib/big.min.js" todir="dist" />
    <copy file="lib/gl-matrix-min.js" todir="dist" />
    <copy file="lib/jszip.min.js" todir="dist" />
    <copy file="lib/jsXmlSaxParser.min.js" todir="dist" />
    <copy file="lib/close.png" todir="dist" />
    <copy file="lib/navigationPanel.png" todir="dist" />
  </target>

  <target name="viewerDistribution" depends="viewerConcat, commonLibrariesDistribution"
          description="Builds viewer minified Javacript files in dist directory">
    <!-- Find full name of YUI Compressor jar -->
    <path id="yuicompressor.jar">
      <first>
        <fileset dir="tools/yuicompressor/build/" includes="yuicompressor*.jar" />
      </first>
    </path>
    <property name="yuicompressor.jar" refid="yuicompressor.jar" />
    <!-- Minify Javascript files -->
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="dist/build/viewmodel.min.js" />
      <arg value="-o" />
      <arg value="dist/build/viewmodel.min.js" />
    </java>
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="dist/build/viewhome.min.js" />
      <arg value="-o" />
      <arg value="dist/build/viewhome.min.js" />
    </java>

    <!-- Add viewModel.js GNU GPL header to viewmodel.min.js -->
    <concat destfile="dist/viewmodel.min.js" encoding="UTF-8">
      <header file="src/viewModel.js" />
      <filterchain>
        <headfilter lines="19" />
        <tokenfilter>
          <replacestring from="viewModel.js" to="viewmodel.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
      <file name="dist/build/viewmodel.min.js" />
    </concat>
    <!-- Add viewHome.js GNU GPL header to viewhome.min.js -->
    <concat destfile="dist/viewhome.min.js" encoding="UTF-8">
      <header file="src/viewHome.js" />
      <filterchain>
        <headfilter lines="19" />
        <tokenfilter>
          <replacestring from="viewHome.js" to="viewhome.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
      <file name="dist/build/viewhome.min.js" />
    </concat>

    <!-- Clean build -->
    <delete dir="dist/build" />

    <echo message="Javascript viewer files in dist ready for ftp" />
  </target>

  <target name="applicationDistribution" depends="applicationConcat, commonLibrariesDistribution"
          description="Builds application minified Javacript files in dist directory">
    <!-- Find full name of YUI Compressor jar -->
    <path id="yuicompressor.jar">
      <first>
        <fileset dir="tools/yuicompressor/build/" includes="yuicompressor*.jar" />
      </first>
    </path>
    <property name="yuicompressor.jar" refid="yuicompressor.jar" />
    <!-- Minify Javascript files -->
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="lib/generated/swingundo.js" />
      <arg value="-o" />
      <arg value="dist/build/swingundo.min.js" />
    </java>
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="src/graphics2d.js" />
      <arg value="-o" />
      <arg value="dist/build/graphics2d.min.js" />
    </java>
    <java jar="${yuicompressor.jar}" fork="true" failonerror="true">
      <arg value="dist/build/sweethome3d.min.js" />
      <arg value="-o" />
      <arg value="dist/build/sweethome3d.min.js" />
    </java>

    <!-- Add core.js GNU GPL header to swingundo.min.js -->
    <concat destfile="dist/swingundo.min.js" encoding="UTF-8">
      <file file="src/core.js" />
      <filterchain>
        <headfilter lines="24" />
        <tokenfilter>
          <replacestring from="core.js" to="swingundo.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
    </concat>
    <concat destfile="dist/swingundo.min.js" encoding="UTF-8" append="true">
      <file name="lib/generated/swingundo.js" />
      <filterchain>
        <headfilter lines="1" skip="5" />
      </filterchain>
    </concat>
    <concat destfile="dist/swingundo.min.js" encoding="UTF-8" append="true">
      <file name="dist/build/swingundo.min.js" />
    </concat>
    <!-- Add graphics2d.js GNU GPL header to graphics2d.min.js -->
    <concat destfile="dist/graphics2d.min.js" encoding="UTF-8">
      <header file="src/graphics2d.js" />
      <filterchain>
        <headfilter lines="24" />
        <tokenfilter>
          <replacestring from="graphics2d.js" to="graphics2d.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
      <file name="dist/build/graphics2d.min.js" />
    </concat>
    <!-- Add header.js GNU GPL header to sweethome3d.min.js -->
    <copy file="dist/build/sweethome3d.min.js" tofile="dist/sweethome3d.min.js"/>
    <concat destfile="dist/sweethome3d.min.js" encoding="UTF-8">
      <header file="src/SweetHome3DJSApplication.js" />
      <filterchain>
        <headfilter lines="19" />
        <tokenfilter>
          <replacestring from="SweetHome3DJSApplication.js" to="sweethome3d.min.js  version ${version}" />
        </tokenfilter>
      </filterchain>
      <file name="dist/build/sweethome3d.min.js" />
    </concat>

    <!-- Clean build -->
    <delete dir="dist/build" />

    <echo message="Javascript files in dist ready for ftp" />
  </target>

  <!-- Downloads and builds YUI Compressor in tools/yuicompressor-master -->
  <target name="install-yuicompressor" unless="yuicompressor.present">
    <get src="https://github.com/yui/yuicompressor/archive/v2.4.8.zip" dest="tools/yuicompressor.zip" />
    <unzip src="tools/yuicompressor.zip" dest="tools" />
    <delete file="tools/yuicompressor.zip" />
    <move file="tools/yuicompressor-2.4.8" tofile="tools/yuicompressor" />
  	<!-- Update javac source and target versions to be able to compile project with Java 11 -->
  	<replace file="tools/yuicompressor/build.xml" token='source="1.5"' value='source="1.8"' />
  	<replace file="tools/yuicompressor/build.xml" token='target="1.5"' value='target="1.8"' />
    <ant dir="tools/yuicompressor" />
  </target>

  <!-- Builds install/SweetHome3DJSViewer-version.zip archive that contains
       the files required for SweetHome3DJSViewer  -->
  <target name="viewerBuild" depends="viewerDistribution"
          description="Builds SweetHome3DJSViewer-version.zip in install directory">
    <mkdir dir="install/viewer/SweetHome3DJSViewer-${version}/lib" />
    <copy todir="install/viewer/SweetHome3DJSViewer-${version}/lib">
      <fileset dir="dist"/>
    </copy>
    <copy file="test/resources/SweetHome3DExample6.sh3d"
          tofile="install/viewer/SweetHome3DJSViewer-${version}/default.sh3d"/>
    <zip destfile="install/SweetHome3DJSViewer-${version}.zip">
      <zipfileset dir="install/viewer/SweetHome3DJSViewer-${version}"/>
      <zipfileset dir="install/viewer" includes="README.TXT, *.html"/>
      <zipfileset dir=".">
        <include name="COPYING.TXT"/>
        <include name="LICENSE.TXT"/>
        <include name="THIRDPARTY-LICENSE-JAVA3D-UTILS.TXT"/>
        <include name="THIRDPARTY-LICENSE-BATIK.TXT"/>
        <include name="THIRDPARTY-LICENSE-BIG-JS.TXT"/>
        <include name="THIRDPARTY-LICENSE-GLMATRIX.TXT"/>
        <include name="THIRDPARTY-LICENSE-JSXMLSAXPARSER.TXT"/>
        <include name="THIRDPARTY-LICENSE-JSZIP.TXT"/>
        <include name="THIRDPARTY-LICENSE-OPEN-JDK.TXT"/>
      </zipfileset>
    </zip>
    <delete dir="install/viewer/SweetHome3DJSViewer-${version}" />

    <echo message="install/SweetHome3DJSViewer-${version}.zip ready"/>
  </target>

  <property name="debug" value="false" />
  <target name="applicationDeploy"
          description="Copies server files in deploy directory">
    <echo>WARNING: run 'applicationDistribution' task if source elements have been modified</echo>
    <fail message="Please build SweetHome3D jar before deploy.">
      <condition>
        <not>
          <available file="../SweetHome3D/install/SweetHome3D-${version}.jar" />
        </not>
      </condition>
    </fail>
    <delete dir="deploy/WEB-INF/classes" />
    <delete dir="deploy/WEB-INF/lib" />
    <delete file="deploy/homes/HomeTest.sh3d" />
    <mkdir dir="deploy/WEB-INF/classes" />
    <mkdir dir="deploy/WEB-INF/lib" />
    <mkdir dir="deploy/homes" />
    <copy file="../SweetHome3D/install/SweetHome3D-${version}.jar" todir="deploy/WEB-INF/lib" />
    <copy file="tools/json/lib/json-20190722.jar" todir="deploy/WEB-INF/lib" />
    <copy file="test/resources/HomeTest.sh3d" todir="deploy/homes" />
    <javac srcdir="tools/deploy/src" destdir="deploy/WEB-INF/classes"
           source="1.8" target="1.8" encoding="ISO-8859-1"
           debug="${debug}" debuglevel="lines,vars,source">
      <classpath>
        <fileset dir="deploy/WEB-INF/lib" />
      </classpath>
    </javac>
    <copy todir="deploy/lib">
      <fileset dir="lib" excludes="generated/**" />
      <fileset dir="dist" />
    </copy>
  </target>

  <target name="applicationDeployTest"
          description="Copies server and test files in deploy directory">
    <antcall target="applicationDeploy">
      <param name="debug" value="true"/>
    </antcall>
    <copy todir="deploy/lib">
      <fileset dir="lib" includes="generated/**" />
    </copy>
    <copy todir="deploy/src">
      <fileset dir="src" />
    </copy>
    <copy file="test/testHome.html" todir="deploy" />
  </target>

  <!-- Builds install/SweetHome3DJS-version.war archive that contains
       the files required for SweetHome3DJS -->
  <target name="applicationBuild" depends="applicationDistribution"
          description="Builds SweetHome3DJS-version.war in install directory">
    <antcall target="applicationDeploy">
      <param name="debug" value="false"/>
    </antcall>
    <mkdir dir="install/SweetHome3DJS-${version}/lib" />
    <copy todir="install/SweetHome3DJS-${version}/lib">
      <fileset dir="lib" excludes="generated/**" />
      <fileset dir="dist"/>
    </copy>
    <copy todir="install/SweetHome3DJS-${version}">
      <fileset dir="deploy" includes="*.jsp"/>
    </copy>
    <mkdir dir="install/SweetHome3DJS-${version}/WEB-INF" />
    <copy todir="install/SweetHome3DJS-${version}/WEB-INF">
      <fileset dir="deploy/WEB-INF"/>
    </copy>
    <mkdir dir="install/SweetHome3DJS-${version}/homes" />
    <zip destfile="install/SweetHome3DJS-${version}.war">
      <zipfileset dir="install/SweetHome3DJS-${version}"/>
      <zipfileset dir=".">
        <include name="COPYING.TXT"/>
        <include name="LICENSE.TXT"/>
        <include name="THIRDPARTY-LICENSE-JAVA3D-UTILS.TXT"/>
        <include name="THIRDPARTY-LICENSE-BATIK.TXT"/>
        <include name="THIRDPARTY-LICENSE-BIG-JS.TXT"/>
        <include name="THIRDPARTY-LICENSE-GLMATRIX.TXT"/>
        <include name="THIRDPARTY-LICENSE-JSXMLSAXPARSER.TXT"/>
        <include name="THIRDPARTY-LICENSE-JSZIP.TXT"/>
        <include name="THIRDPARTY-LICENSE-JSON-ORG.TXT"/>
        <include name="THIRDPARTY-LICENSE-OPEN-JDK.TXT"/>
      </zipfileset>
    </zip>
    <delete dir="install/SweetHome3DJS-${version}" />

    <echo message="install/SweetHome3DJS-${version}.war ready"/>
  </target>

  <!-- Builds dist/SweetHome3DJS-version-jsdoc.zip archive that contains
     the generated JSDoc of Javascript source files found in SweetHome3D-version-src -->
  <target name="jsdoc" depends="applicationLibraries"
          description="Builds dist/SweetHome3DJS-version-jsdoc.zip archive">
    <!-- Download and build JSDoc Toolkit Ant task -->
    <available file="tools/jsdoc-toolkit-ant-task" type="dir" property="jsdoc-toolkit-ant-task.present" />
    <antcall target="install-jsdoc-toolkit-ant-task" />
    <!-- Generate JSDoc -->
    <mkdir dir="install/jsdoc/SweetHome3DJS-${version}-jsdoc" />
    <taskdef name="jsdoctoolkit" classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit"
             classpath="tools/jsdoc-toolkit-ant-task/build/jar/jsdoc-toolkit-ant-task-1.1.2.jar;tools/jsdoc-toolkit-ant-task/lib/rhino/js-1.7r2.jar"/>
    <jsdoctoolkit jsdochome="tools/jsdoc-toolkit-ant-task/lib/jsdoc-toolkit/jsdoc_toolkit-2.4.0/"
                  template="../../../../../JSDocTemplate" outputdir="install/jsdoc/SweetHome3DJS-${version}-jsdoc">
      <fileset dir="src" includes="*.js" excludes="scene3d.js, HTMLCanvas3D.js, Triangulator.js" />
      <fileset dir="lib/generated" includes="SweetHome3D.js" />
    </jsdoctoolkit>
    <zip destfile="install/SweetHome3DJS-${version}-jsdoc.zip" basedir="install/jsdoc" includes="SweetHome3DJS-${version}-jsdoc/**" />

    <!-- Clean jsdoc directory -->
    <delete dir="install/jsdoc" />

    <echo message="install/SweetHome3DJS-${version}-jsdoc.zip ready for ftp" />
  </target>

  <!-- Downloads and builds JSDoc Toolkit Ant task in tools/jsdoc-toolkit-ant-task -->
  <target name="install-jsdoc-toolkit-ant-task" unless="jsdoc-toolkit-ant-task.present">
    <get src="https://github.com/ironsidevsquincy/jsdoc-toolkit-ant-task/archive/master.zip" dest="tools/jsdoc-toolkit-ant-task.zip" />
    <unzip src="tools/jsdoc-toolkit-ant-task.zip" dest="tools" />
    <delete file="tools/jsdoc-toolkit-ant-task.zip" />
    <move file="tools/jsdoc-toolkit-ant-task-master" tofile="tools/jsdoc-toolkit-ant-task" />
    <ant dir="tools/jsdoc-toolkit-ant-task" target="package" inheritAll="false" />
  </target>

  <!-- Builds SweetHome3DJS-version-src.zip archive that contains
       SweetHome3D source files in directory named SweetHome3D-version-src -->
  <target name="sourceArchive"
          description="Builds SweetHome3DJS-version-src.zip archive">
    <mkdir dir="install/source/SweetHome3DJS-${version}-src" />
    <copy todir="install/source/SweetHome3DJS-${version}-src">
      <fileset dir=".">
        <include name="build.xml" />
        <include name="*.TXT" />
        <include name="src/**" />
        <include name="lib/**" />
        <include name="test/**" />
        <include name="install/viewer/*"/>
        <include name="deploy/*.jsp" />
        <include name="tools/JSweet/**" />
        <include name="tools/JSDocTemplate/**" />
        <include name="tools/json/**" />
        <include name="tools/deploy/**" />
        <!-- Eclipse project files -->
        <include name=".settings/**" />
        <include name=".classpath" />
        <include name=".project" />
        <!-- Exclude generated libs -->
        <exclude name="lib/generated/**" />
        <exclude name="lib/resources/**" />
        <exclude name="tools/JSweet/classes/**" />
        <exclude name="tools/JSweet/lib/generated/**" />
      </fileset>
    </copy>

    <zip destfile="install/SweetHome3DJS-${version}-src.zip" basedir="install/source"
         includes="SweetHome3DJS-${version}-src/**" />

    <!-- Clean source directory -->
    <delete dir="install/source" />

    <echo message="install/SweetHome3DJS-${version}-src.zip ready for ftp" />
  </target>
</project>


