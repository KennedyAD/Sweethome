<?xml version="1.0"?>
<!-- build.xml

     Copyright (c) 2007-2009 Emmanuel PUYBARET / eTeks <info@eteks.com>. All Rights Reserved.
     
     Ant build file. Available targets :
     - build       : Builds SweetHome3D.jar file in build directory
     - application : Builds SweetHome3D.jar file without applet classes in build directory
     - furniture   : Builds Furniture.jar file in build directory
     - textures    : Builds Textures.jar file in build directory
     - help        : Builds Help.jar file in build directory

     - java3dLibraries  : Builds JNLP Java 3D libraries in deploy/lib subdirectories
     - javaWebStart     : Builds Java Web Start signed files in deploy/lib directory
     - applet           : Builds applet signed files in deploy/lib directory
     - jarExecutable    : Builds SweetHome3D-version.jar file in install directory
     - windowsInstaller : Builds SweetHome3D-version-windows.exe file in install directory     
     - macosxInstaller  : Builds SweetHome3D-version-macosx.dmg file in install directory
     - linuxInstaller   : Builds SweetHome3D-version-linux-x86.tgz file in install directory
     - sourceArchive    : Builds SweetHome3D-version-src.zip file in install directory
     - javadoc          : Builds SweetHome3D-version-javadoc.zip file install directory 
     
     - jdepend : Launchs a JDepend graphical UI to help update dependencies in PackageDependenciesTest 
-->
<project basedir="." default="javaWebStart" name="SweetHome3D">
  <!-- The current version of Sweet Home 3D -->
  <property name="version" value="1.8"/>

  <!-- Builds build/SweetHome3D.jar with all its classes -->
  <target name="build">
    <!-- Compile Sweet Home 3D -->
    <mkdir dir="build/classes"/>
    <!-- Compile Sweet Home 3D applet first with javac 1.1 to be able to detect current Java version
         during applet launch (otherwise Java 1.1 to 1.4 plug-ins refuse to load Applet class) -->
    <javac srcdir="src" destdir="build/classes"
           includes="com/eteks/sweethome3d/applet/SweetHome3DApplet.*"
           encoding="ISO-8859-1" target="1.1" source="1.2"/>      
    <!-- Compile other classes -->
    <javac srcdir="src" destdir="build/classes"
           encoding="ISO-8859-1" target="1.5">
      <!-- Use lib as an extension directory to override default Java 3D libraries -->
      <extdirs>
        <pathelement location="lib"/>
      </extdirs>
      <classpath>
        <pathelement location="libtest/AppleJavaExtensions.jar"/>
        <pathelement location="libtest/jnlp.jar"/>
      </classpath>
    </javac>
    
    <!-- Copy resources excepted furniture, textures and help files -->
    <copy todir="build/classes">
      <fileset dir="src">
        <include name="**"/>
        <exclude name="**/*.java"/>
        <exclude name="**/*.java"/>
        <exclude name="com/eteks/sweethome3d/io/*Catalog*.properties"/>
        <exclude name="com/eteks/sweethome3d/io/resources/**"/>
        <exclude name="com/eteks/sweethome3d/swing/resources/icons/jfc/*.*"/>
        <exclude name="**/help/**"/> 
      </fileset>
    </copy>
    
    <!-- Create SweetHome3D.jar -->
    <zip destfile="build/SweetHome3D.jar" 
         basedir="build/classes"/>
    <delete dir="build/classes"/>
  </target>

  <!-- Builds build/SweetHome3D.jar without applet classes -->
  <target name="application" depends="build">
    <zip destfile="build/SweetHome3DStandalone.jar">
      <zipfileset src="build/SweetHome3D.jar" 
                  excludes="com/eteks/sweethome3d/applet/**"/>
    </zip>
    <move file="build/SweetHome3DStandalone.jar" tofile="build/SweetHome3D.jar"/>
  </target>

  <!-- Builds build/Furniture.jar that contains the furniture files -->
  <target name="furniture">
    <zip destfile="build/Furniture.jar" basedir="src">
      <include name="com/eteks/sweethome3d/io/*FurnitureCatalog*.properties"/>
      <include name="com/eteks/sweethome3d/io/resources/**"/>
      <exclude name="com/eteks/sweethome3d/io/resources/textures/**"/>
    </zip>
  </target>

  <!-- Builds build/Textures.jar that contains the textures files -->
  <target name="textures">
    <zip destfile="build/Textures.jar" basedir="src">
      <include name="com/eteks/sweethome3d/io/*TexturesCatalog*.properties"/>
      <include name="com/eteks/sweethome3d/io/resources/textures/**"/>
    </zip>
  </target>

  <!-- Builds build/Help.jar that contains the help files -->
  <target name="help">
    <zip destfile="build/Help.jar" basedir="src">
      <include name="**/help/**"/>
    </zip>
  </target>

  <!-- Builds JNLP Java 3D libraries in deploy/lib subdirectories -->
  <target name="java3dLibraries">
    <!-- Create java3d.jar containing Windows Java 3D DLLs and jars -->
    <mkdir dir="deploy/lib/windows"/>
    <zip destfile="deploy/lib/windows/java3d.jar">
      <fileset dir="lib/windows">
        <include name="*.dll"/>
      </fileset>
      <fileset dir="lib">
        <include name="j3dcore.jar"/>
        <include name="j3dutils.jar"/>
        <include name="vecmath.jar"/>
      </fileset>
    </zip>

    <!-- Create java3d.jar containing Linux Java 3D DLLs and jars -->
    <mkdir dir="deploy/lib/linux/i386"/>
    <zip destfile="deploy/lib/linux/i386/java3d.jar">
      <fileset dir="lib/linux/i386">
        <include name="*.so"/>
      </fileset>
      <fileset dir="lib">
        <include name="j3dcore.jar"/>
        <include name="j3dutils.jar"/>
        <include name="vecmath.jar"/>
      </fileset>
    </zip>
 
    <!-- Create java3d.jar containing Mac OS X Java 3D DLLs and jars -->
    <mkdir dir="deploy/lib/macosx"/>
    <zip destfile="deploy/lib/macosx/java3d.jar">
      <fileset dir="lib/macosx">
        <include name="*.jnilib"/>
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="j3dcore.jar"/>
        <include name="j3dutils.jar"/>
        <include name="vecmath.jar"/>
      </fileset>
    </zip>
  </target>

  <!-- Builds deploy/lib/SweetHome3D.jar and signs jars required by Sweet Home 3D with Java Web Start -->
  <target name="javaWebStart" depends="application,furniture,textures,help,java3dLibraries">
    <!-- Build SweetHome3D.jar file from the content of built jars -->
    <mkdir dir="deploy/lib"/>
    <zip destfile="deploy/lib/SweetHome3D.jar">
      <zipfileset src="build/SweetHome3D.jar"/>
      <zipfileset src="build/Furniture.jar"/>
      <zipfileset src="build/Textures.jar"/>
      <zipfileset src="build/Help.jar"/>
    </zip>

    <!-- Copy other jar files -->
    <copy todir="deploy/lib">
      <fileset dir="lib">
        <include name="*.jar"/>
        <exclude name="j3dcore.jar"/>
        <exclude name="j3dutils.jar"/>
        <exclude name="vecmath.jar"/>
      </fileset>
    </copy>

    <!-- Clean build directory -->
    <delete dir="build"/>
    
    <input message="Enter Passphrase for keystore:" 
           addproperty="password"/> 
    <!-- Sign jar files in deploy/lib dir -->
    <signjar keystore="keys.keytool" 
             alias="SweetHome3D" storepass="${password}">
      <fileset dir="deploy/lib">
        <include name="*.jar"/>
      </fileset>
    </signjar>

    <echo message="deploy dir ready for ftp"/>
  </target>

  <!-- Builds deploy/lib/SweetHome3DApplet.jar and signs jars required by Sweet Home 3D applet -->
  <target name="applet" depends="build,java3dLibraries">
    <!-- Create SweetHome3DApplet.jar containing Sweet Home 3D classes and resources -->
    <mkdir dir="deploy/lib"/>
    <zip destfile="deploy/lib/SweetHome3DApplet.jar">
      <zipfileset src="build/SweetHome3D.jar" 
                  excludes="com/eteks/sweethome3d/*.*, com/eteks/sweethome3d/resources/**"/>
    </zip>
 
    <!-- Create java3d.jar containing Java 3D DLLs and jars for Windows, Linux and Mac OS X 
         (this library is used for Java versions older than Java SE 6 update 12) -->
    <zip destfile="deploy/lib/java3d.jar">
      <fileset dir="lib/windows">
        <include name="*.dll"/>
      </fileset>
      <fileset dir="lib/linux/i386">
        <include name="*.so"/>
      </fileset>
      <fileset dir="lib/macosx">
        <include name="*.jnilib"/>
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="j3dcore.jar"/>
        <include name="j3dutils.jar"/>
        <include name="vecmath.jar"/>
      </fileset>
    </zip>

    <!-- Copy other jar files -->
    <copy todir="deploy/lib">
      <fileset dir="lib">
        <include name="*.jar"/>
        <exclude name="j3dcore.jar"/>
        <exclude name="j3dutils.jar"/>
        <exclude name="vecmath.jar"/>
        <!-- No Print to PDF in applet -->
        <exclude name="itext-2.0.4.jar"/>
      </fileset>
    </copy>
    <copy todir="deploy/lib" file="libtest/jnlp.jar"/>

    <!-- Clean build directory -->
    <delete dir="build"/>

    <input message="Enter Passphrase for keystore:" 
           addproperty="password"/> 
    <!-- Sign jar files in deploy/lib dir -->
    <signjar keystore="keys.keytool" 
             alias="SweetHome3D" storepass="${password}">
      <fileset dir="deploy/lib">
        <include name="**/*.jar"/>
      </fileset>
    </signjar>

    <echo message="deploy dir ready for ftp"/>
  </target>

  <!-- Builds install/SweetHome3D-version.jar executable Jar -->
  <target name="jarExecutable" depends="application,furniture,textures,help">
    <!-- Create SweetHome3D-version.jar containing Sweet Home 3D classes and resources,
         and other DLLs and jars -->
    <jar destfile="install/SweetHome3D-${version}.jar" 
         manifest="install/jar/MANIFEST.MF">
      <zipfileset src="build/SweetHome3D.jar"/>
      <zipfileset src="build/Furniture.jar"/>
      <zipfileset src="build/Textures.jar"/>
      <zipfileset src="build/Help.jar"/>
      <fileset dir="lib/windows">
        <include name="*.dll"/>
      </fileset>
      <fileset dir="lib/linux/i386">
        <include name="*.so"/>
      </fileset>
      <fileset dir="lib/macosx">
        <include name="*.jnilib"/>
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="libtest">
        <include name="jnlp.jar"/>
      </fileset>
      <fileset dir=".">
        <include name="LICENSE.TXT"/>
        <include name="COPYING.TXT"/>
        <include name="THIRDPARTY-LICENSE-JAVA3D.TXT"/>
        <include name="THIRDPARTY-LICENSE-LOADER3DS.TXT"/>
        <include name="THIRDPARTY-LICENSE-ITEXT.TXT"/>
      	<include name="THIRDPARTY-LICENSE-VECTORGRAPHICS.TXT"/>
        <include name="THIRDPARTY-LICENSE-TANGO.TXT"/>
        <include name="THIRDPARTY-LICENSE-CONTRIBUTIONS.TXT"/>
      </fileset>
    </jar>
 
    <!-- Clean build directory -->
    <delete dir="build"/>

    <echo message="install/SweetHome3D-${version}.jar ready for ftp"/>
  </target>

  <!-- Builds install/SweetHome3D-version-windows.exe installer able to install SweetHome3D.exe 
       with a Windows JRE and Sweet Home 3D libraries.
       CAUTION : May be run only under Windows and requires a Windows JRE, launch4j and Inno Setup 
                 installed in their default location -->
  <target name="windowsInstaller" depends="application,furniture,textures,help">
    <!-- Copy SweetHome3D JARs and Windows Java 3D DLLs and JARs for Java 3D 
         to install/windows/tmp/lib -->
    <mkdir dir="install/windows/tmp/lib"/>
    <move file="build/SweetHome3D.jar" todir="install/windows/tmp/lib" />
    <move file="build/Furniture.jar"   todir="install/windows/tmp/lib" />
    <move file="build/Textures.jar"    todir="install/windows/tmp/lib" />
    <move file="build/Help.jar"        todir="install/windows/tmp/lib" />
    <copy todir="install/windows/tmp/lib" >
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/windows">
        <include name="*.dll"/>
      </fileset>
    </copy>
    <!-- Copy COPYING.TXT and licenses texts to install/windows/tmp/ -->
    <copy file="COPYING.TXT" todir="install/windows/tmp"/>
    <copy file="LICENSE.TXT" todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-JAVA.TXT"      todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-JAVA3D.TXT"    todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-LOADER3DS.TXT" todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-ITEXT.TXT"     todir="install/windows/tmp" />
  	<copy file="THIRDPARTY-LICENSE-VECTORGRAPHICS.TXT" todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-LAUNCH4J.TXT"  todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-INNOSETUP.TXT" todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-TANGO.TXT"     todir="install/windows/tmp" />
    <copy file="THIRDPARTY-LICENSE-CONTRIBUTIONS.TXT" todir="install/windows/tmp" />
  
    <!-- Copy JRE to install/windows/tmp/jre... excluding files mentioned 
         in JRE README.TXT file (JRE bin/javaw.exe command excepted) -->
    <copy todir="install/windows/tmp/jre6">
      <fileset dir="C:\Program Files\Java\jre6">
        <include name="*"/>
        <include name="bin/**"/>
        <include name="lib/**"/>

        <exclude name="lib/ext/sunjce_provider.jar"/>
        <exclude name="bin/rmid.exe"/>
        <exclude name="bin/rmiregistry.exe"/>
        <exclude name="bin/tnameserv.exe"/>
        <exclude name="bin/keytool.exe"/>
        <exclude name="bin/kinit.exe"/>
        <exclude name="bin/klist.exe"/>
        <exclude name="bin/ktab.exe"/>
        <exclude name="bin/policytool.exe"/>
        <exclude name="bin/orbd.exe"/>
        <exclude name="bin/servertool.exe"/>

        <exclude name="bin/java.exe"/>
        <exclude name="bin/javaws.exe"/>
        <exclude name="bin/javacpl.exe"/>
        <exclude name="bin/jucheck.exe"/>
        <exclude name="bin/jusched.exe"/>
        <exclude name="bin/wsdetect.dll"/>
        <exclude name="bin/npjava*.dll"/>
        <exclude name="bin/npjpi*.dll"/>
        <exclude name="bin/npoji610.dll"/>
        <exclude name="bin/regutils.dll"/>
        <exclude name="bin/axbridge.dll"/>
        <exclude name="bin/deploy.dll"/>
        <exclude name="bin/jpicom.dll"/>
        <exclude name="bin/javacpl.cpl"/>
        <exclude name="bin/jpiexp.dll"/>
        <exclude name="bin/jpinscp.dll"/>
        <exclude name="bin/jpioji.dll"/>
        <exclude name="bin/jpishare.dll"/>
        <exclude name="lib/deploy.jar"/>
        <exclude name="lib/plugin.jar"/>
        <exclude name="lib/deploy/messages*.properties"/>
        <exclude name="lib/deploy/splash.jpg"/>
      </fileset>
    </copy>

    <!-- Create SweetHome3D.exe with launch4j -->
    <exec executable="C:\Program Files\Launch4j\launch4jc.exe">
      <arg value="${basedir}\install\windows\installerLaunch4j.xml"/>
    </exec>

    <!-- Create SweetHome3D-version-windows.exe with Inno Setup -->
    <exec executable="C:\Program Files\Inno Setup 5\ISCC.exe">
      <arg value="${basedir}\install\windows\installerInnoSetup.iss"/>
    </exec>  

    <!-- Clean build directories -->
    <delete dir="build"/>
    <delete dir="install/windows/tmp"/>

    <echo message="install/SweetHome3D-${version}-windows.exe ready for ftp"/>
  </target>

  <!-- Builds install/SweetHome3D-version-macosx.dmg archive that contains SweetHome3D.app 
       and Sweet Home 3D libraries. 
       CAUTION : May be run only under Mac OS X and requires Disk Utility -->
  <target name="macosxInstaller" depends="application,furniture,textures,help">
    <!-- Copy Sweet Home 3D files to install/macosx/SweetHome3D-version/Sweet Home 3D.app -->
    <mkdir dir="install/macosx/SweetHome3D-${version}/"/>
    <copy todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app">
      <fileset dir="install/macosx/Sweet Home 3D"/>
    </copy>

    <!-- Change executable permission of JavaApplicationStub lost during copy task -->
    <chmod perm="+x" file="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/MacOS/JavaApplicationStub"/>

    <!-- Copy SweetHome3D JARs and its direct libs 
         to install/macosx/SweetHome3D-version/Sweet Home 3D.app/Contents/Resources/Java -->
    <mkdir dir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java/ext"/>
    <move file="build/SweetHome3D.jar" todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java" />
    <move file="build/Furniture.jar"   todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java" />
    <move file="build/Textures.jar"    todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java" />
    <move file="build/Help.jar"        todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java" />
    <copy todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java" >
      <fileset dir="lib">
        <include name="*.jar"/>
        <exclude name="j3dcore.jar"/>
        <exclude name="j3dutils.jar"/>
        <exclude name="vecmath.jar"/>
        <!-- Print to PDF menu item isn't available under Mac OS X as it's already in standard print dialog -->
        <exclude name="iText-2.1.2u.jar"/>
      </fileset>
    </copy>
    <!-- Copy jnlp.jar and Mac OS X Java 3D 1.5 DLLs and JARs for Java 3D 
         to install/macosx/SweetHome3D-version/Sweet Home 3D.app/Contents/Resources/Java/ext -->
    <copy file="libtest/jnlp.jar" todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java/ext"/>
    <copy todir="install/macosx/SweetHome3D-${version}/Sweet Home 3D.app/Contents/Resources/Java/ext" >
      <fileset dir="lib/macosx">
        <include name="*.jar"/>
        <include name="*.jnilib"/>
      </fileset>
      <fileset dir="lib">
        <include name="j3dcore.jar"/>
        <include name="j3dutils.jar"/>
        <include name="vecmath.jar"/>
      </fileset>
    </copy>
    <!-- Copy COPYING.TXT and licenses texts to install/macosx/SweetHome3D-version/ -->
    <copy file="COPYING.TXT" todir="install/macosx/SweetHome3D-${version}"/>
    <copy file="LICENSE.TXT" todir="install/macosx/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-JAVA3D.TXT"    todir="install/macosx/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-LOADER3DS.TXT" todir="install/macosx/SweetHome3D-${version}" />
  	<copy file="THIRDPARTY-LICENSE-VECTORGRAPHICS.TXT" todir="install/macosx/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-TANGO.TXT"     todir="install/macosx/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-CONTRIBUTIONS.TXT"  todir="install/macosx/SweetHome3D-${version}" />
 
    <!-- Create install/SweetHome3D-version-macosx.dmg with Disk Utility -->
    <delete file="install/SweetHome3D-${version}-macosx.dmg"/>
    <exec executable="hdiutil">
      <arg value="create"/>
      <arg value="-srcfolder"/>
      <arg value="install/macosx/SweetHome3D-${version}"/>
      <arg value="install/SweetHome3D-${version}-macosx.dmg"/>
    </exec>

    <!-- Clean build directories -->
    <delete dir="build"/>
    <delete dir="install/macosx/SweetHome3D-${version}"/>

    <echo message="install/SweetHome3D-${version}-macosx.dmg ready for ftp"/>
  </target>

  <!-- Builds install/SweetHome3D-version-linux-x86.tgz archive that contains SweetHome3D command
       with a Linux JRE and Sweet Home 3D libraries.
       CAUTION : Requires a Linux JRE installed in jre1.6.0_12 -->
  <target name="linuxInstaller" depends="application,furniture,textures,help">
    <!-- Copy SweetHome3D.jar and Linux Java 3D DLLs and JARs for Java 3D 
         to install/linux/i386/SweetHome3D-version/lib -->
    <mkdir dir="install/linux/i386/SweetHome3D-${version}/lib"/>
    <!-- Copy SweetHome3D command -->
    <copy todir="install/linux/i386/SweetHome3D-${version}/" 
          file="install/linux/SweetHome3D"/>

    <!-- Copy SweetHome3D JARs and its direct libs 
         to install/linux/i386/SweetHome3D-version/lib -->
    <move file="build/SweetHome3D.jar" todir="install/linux/i386/SweetHome3D-${version}/lib" />
    <move file="build/Furniture.jar"   todir="install/linux/i386/SweetHome3D-${version}/lib" />
    <move file="build/Textures.jar"    todir="install/linux/i386/SweetHome3D-${version}/lib" />
    <move file="build/Help.jar"        todir="install/linux/i386/SweetHome3D-${version}/lib" />
    <copy todir="install/linux/i386/SweetHome3D-${version}/lib" >
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/linux/i386">
        <include name="*.so"/>
      </fileset>
    </copy>
    <copy file="COPYING.TXT" todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="LICENSE.TXT" todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-JAVA.TXT"      todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-JAVA3D.TXT"    todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-LOADER3DS.TXT" todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-ITEXT.TXT"     todir="install/linux/i386/SweetHome3D-${version}" />
  	<copy file="THIRDPARTY-LICENSE-VECTORGRAPHICS.TXT" todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-TANGO.TXT"     todir="install/linux/i386/SweetHome3D-${version}" />
    <copy file="THIRDPARTY-LICENSE-CONTRIBUTIONS.TXT"  todir="install/linux/i386/SweetHome3D-${version}" />

    <!-- Copy JRE to install/linux/i386/SweetHome3D-version/jre... excluding files mentioned 
         in JRE README.TXT file (JRE bin/java command excepted) -->
    <copy todir="install/linux/i386/SweetHome3D-${version}/jre1.6.0_12">
      <fileset dir="jre1.6.0_12">
        <include name="**"/>

        <exclude name="lib/ext/sunjce_provider.jar"/>
        <exclude name="bin/rmid"/>
        <exclude name="bin/rmiregistry"/>
        <exclude name="bin/tnameserv"/>
        <exclude name="bin/keytool"/>
        <exclude name="bin/policytool"/>
        <exclude name="bin/orbd"/>
        <exclude name="bin/servertool"/>
      </fileset>
    </copy>

    <!-- Create SweetHome3D-version-linux-x86.tgz archive -->
    <tar destfile="install/SweetHome3D-${version}-linux-x86.tgz"
         compression="gzip">
      <tarfileset dir="install/linux/i386"
                  includes="SweetHome3D-${version}/**">
        <exclude name="SweetHome3D-${version}/SweetHome3D"/>
        <exclude name="SweetHome3D-${version}/jre1.6.0_12/bin/java"/>
      </tarfileset>
      <!-- Change executable permission of SweetHome3D and java commands -->
      <tarfileset dir="install/linux/i386" mode="755">
        <include name="SweetHome3D-${version}/SweetHome3D"/>
        <include name="SweetHome3D-${version}/jre1.6.0_12/bin/java"/>
      </tarfileset>
    </tar>

    <!-- Clean build directories -->
    <delete dir="build"/>
    <delete dir="install/linux/i386"/>

    <echo message="install/SweetHome3D-${version}-linux-x86.tgz ready for ftp"/>
  </target>

  <!-- Builds install/SweetHome3D-version-src.zip archive that contains 
       SweetHome3D source files in directory named SweetHome3D-version-src -->
  <target name="sourceArchive">
    <mkdir dir="install/source/SweetHome3D-${version}-src"/>
    <copy todir="install/source/SweetHome3D-${version}-src">
      <fileset dir=".">
        <include name="build.xml"/>
        <include name="*.TXT"/>
        <include name="src/**"/>
        <include name="test/**"/>
        <include name="lib/**"/>
        <include name="libtest/**"/>
        <!-- Do not include generated files that may belong to 
             deploy and install directories -->
        <include name="deploy/SweetHome3D*.*"/>
        <include name="deploy/*.php"/>
        <include name="install/macosx/**"/>
        <include name="install/windows/**"/>
        <include name="install/linux/**"/>
        <include name="install/jar/**"/>
        <!-- Eclipse project files -->
        <include name=".settings/**"/>
        <include name=".classpath"/>
        <include name=".project"/>
      </fileset>
    </copy>

    <zip destfile="install/SweetHome3D-${version}-src.zip" basedir="install/source"
         includes="SweetHome3D-${version}-src/**" />

    <!-- Clean build directory -->
    <delete dir="install/source"/>

    <echo message="install/SweetHome3D-${version}-src.zip ready for ftp"/>
  </target>

  <!-- Builds install/SweetHome3D-version-javadoc.zip archive that contains 
       SweetHome3D source files in directory named SweetHome3D-version-src -->
  <target name="javadoc">
    <mkdir dir="install/javadoc/SweetHome3D-${version}-javadoc"/>
    <javadoc sourcepath="src" destdir="install/javadoc/SweetHome3D-${version}-javadoc" 
             encoding="ISO-8859-1" version="true" author="true" use="true"
             windowtitle="Sweet Home 3D ${version} API">
      <doctitle><![CDATA[<img src='http://www.sweethome3d.eu/SweetHome3DIcon.gif' width='48' height='48' alt='Sweet Home 3D' align='absmiddle'> Sweet Home 3D ${version} API]]></doctitle>
      <header><![CDATA[<a href='http://www.sweethome3d.eu' target='_parent'><font size='+1'>Sweet Home 3D ${version}</font></a>]]></header>
      <footer><![CDATA[<a href='http://www.sweethome3d.eu' target='_parent'><font size='+1'>Sweet Home 3D ${version}</font></a>]]></footer>
      <bottom><![CDATA[<table align='center'><tr>
                       <td><a href='http://www.eteks.com' target='_parent'><img align='absmiddle' src='http://www.sweethome3d.eu/images/eteks.gif' border='0'><a></td>
                       <td>© Copyrights 2006-2008 <a href='http://www.eteks.com' target='_parent'>eTeks</a> - All rights reserved 
                           <br>Distributed under <a href='http://www.gnu.org/licenses/gpl-2.0.html' target='_parent'>GNU General Public License</a></td></tr></table>]]></bottom>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
      <link href="http://download.java.net/media/java3d/javadoc/1.5.2/"/>
      <group title="Base classes" packages="*"/>
      <group title="Application and Applet" packages="com.eteks.sweethome3d:com.eteks.sweethome3d.applet"/>
      <classpath>
        <fileset dir="lib"/>
        <pathelement location="libtest/AppleJavaExtensions.jar"/>
        <pathelement location="libtest/jnlp.jar"/>
      </classpath>
    </javadoc>

    <zip destfile="install/SweetHome3D-${version}-javadoc.zip" basedir="install/javadoc"
         includes="SweetHome3D-${version}-javadoc/**" />

    <!-- Clean build directory -->
    <delete dir="install/javadoc"/>

    <echo message="install/SweetHome3D-${version}-javadoc.zip ready for ftp"/>
  </target>

  <!-- Launchs a JDepend graphical UI to help update dependencies in PackageDependenciesTest test -->
  <target name="jdepend" depends="build">
    <!-- Create jdepend.properties file in build directory that specifies ignored Java packages -->
    <concat destfile="build/jdepend.properties">ignore.java=java.*,javax.swing.*</concat>

    <!-- Run JDepend UI -->
    <java classname="jdepend.swingui.JDepend" fork="true">
      <classpath>
        <pathelement location="libtest/jdepend-2.9.jar"/>
        <pathelement location="build"/>
      </classpath>
      <arg value="build"/>
    </java>

    <!-- Clean build directory -->
    <delete dir="build"/>
  </target>
</project>
